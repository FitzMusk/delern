# Validate with: ruby -ryaml -e 'YAML.load_file ".travis.yml"'

# Generic option gives us Git, Ruby, NodeJS, JVM, i.e. everything we need.
# https://docs.travis-ci.com/user/languages/minimal-and-generic/#generic
language: generic

# Travis CI does not fetch the repository alltogether by default, and we need
# to count commits to evaluate application build number. See also:
# https://github.com/travis-ci/travis-ci/issues/7422.
# TODO(dotdoom): use CI build number instead of commit count.
git:
  depth: false

env:
  global:
    - TERM=dumb
    - PAGER=cat
    - SDK_ROOT="$HOME/sdk"
    - ANDROID_HOME="$SDK_ROOT/android"
    - PATH="$SDK_ROOT/flutter/bin:$SDK_ROOT/google-cloud-sdk/bin:$PATH"
    - GRADLE_OPTS="-Dorg.gradle.daemon=false"
    - CLOUDSDK_CORE_DISABLE_PROMPTS=1
    # A workaround to hide large dumps of text files, see also
    # https://github.com/flutter/flutter/pull/4989.
    - BOT=false

os: osx

branches:
  only:
    - master
    - /^[0-9]+[.][0-9]+[.][0-9]+$/

cache:
  timeout: 500
  directories:
    # Caching a lot of small files is slow because of md5 calculation of each:
    # https://github.com/travis-ci/travis-ci/issues/9009. Cache selectively.
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/
    - $ANDROID_HOME
    - $SDK_ROOT/flutter

before_script:
  - mkdir -p "${SDK_ROOT?}"

  - |
    # Install and configure gcloud
    curl -sSL \
    'https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-227.0.0-darwin-x86_64.tar.gz' | \
    tar -C "${SDK_ROOT?}" -xz
  - gcloud version
  # This is needed only for iOS to fetch match keys repository.
  - |
    git config --global credential.https://source.developers.google.com.helper \
        gcloud.sh

  - |
    # Install and build flutter (may be cached)
    if hash flutter; then
      flutter upgrade
    else
      git clone --depth=2 --branch=beta https://github.com/flutter/flutter.git \
          "${SDK_ROOT?}/flutter"
    fi
  - flutter precache
  - flutter --version

  - bundle --version
  # TODO(dotdoom): make it bundle install --deployment.
  - bundle install

  # Install Android SDK.
  - mkdir -p "${ANDROID_HOME?}/licenses"
  # This is a hash of accepted licenses, which can be copied verbatim from a
  # developer's workstation.
  - |
    echo d56f5187479451eabf01fb78af6dfcb131a6481e \
      > "${ANDROID_HOME?}/licenses/android-sdk-license"
  # Bootstrap step necessary to run Gradle, which installs Android SDK.
  - echo "flutter.sdk=$SDK_ROOT/flutter" > flutter/android/local.properties
  # TODO(dotdoom): this may be obsolete.
  - ( cd flutter/android && ./gradlew resolveDependencies )

  # TODO(dotdoom): this may be obsolete.
  - ( cd flutter && flutter packages get )

  # TODO(dotdoom): file bug: Travis ignores node_js and .nvmrc for generic lang.
  # Firebase requires Node version > 8.
  - nvm install 8
  - nvm alias default 8

  - node --version
  - npm --version
  - ( cd firebase && npm install --no-save )
  - ( cd firebase/functions && npm install --no-save )
  - ( cd firebase/www && ../node_modules/.bin/bower --allow-root install )

  # TODO(dotdoom): this step is very slow and should not even be necessary.
  #- pod setup

script:
  - ( cd flutter && bundle exec fastlane build )

  - ( cd flutter && flutter test --coverage )
  - bash <(curl -s https://codecov.io/bash)

  - ( cd firebase && npm run build )
  - ( cd firebase/www && ../node_modules/.bin/polymer lint )

  - bundle exec fastlane ensure_clean_git

  - |
    if [[ "$TRAVIS_PULL_REQUEST" == "false" ]]; then
      echo 'Building a tag or a branch. Deploy Firebase to debug,'
      echo 'publish to Play Store (internal track).'

      # We use this account to access both Google Play account and GCS.
      # The former requires it to be in the location configured in Appfile.
      echo "${GCLOUD_SERVICE_KEY}" | base64 --decode > flutter/android/app/play-store-service-account.json
      gcloud auth activate-service-account --key-file flutter/android/app/play-store-service-account.json

      mkdir -p ~/.android
      gsutil cp gs://dasfoo-keystore/debug.keystore ~/.android/
      gsutil cp gs://dasfoo-keystore/delern.jks flutter/android/app/

      bundle exec fastlane ensure_clean_git
      ( cd firebase && PROJECT=delern-debug npm run deploy )
      ( cd firebase && PROJECT=delern-e1b33 npm run deploy )
      ( cd flutter && bundle exec fastlane android publish )

      if [ -n "$TRAVIS_TAG" ]; then
        echo 'Building a tag. Upload to TestFlight.'
        ( cd flutter && bundle exec fastlane ios publish )
      elif [[ "$TRAVIS_BRANCH" == "master" ]]; then
        echo 'Building "master" branch. Build debug version, sign. Do not'
        echo 'upload to TestFlight (review process is too slow, besides,'
        echo 'version number format will look like a.b.c-N-gCOMMIT, which is'
        echo 'not accepted by Apple Store).'

        ( cd flutter && bundle exec fastlane ios build )
      else
        echo 'Unexpected condition for triggering the build!' >&2
        exit 1
      fi
    else
      echo 'Building a PR. No access to keys. Build debug version w/o signing.'
      ( cd flutter && bundle exec fastlane android build )
      sed -i '' 's/"CODE_SIGN_IDENTITY.*/CODE_SIGNING_REQUIRED = NO;/g' \
          flutter/ios/Runner.xcodeproj/project.pbxproj
      ( cd flutter && flutter build ios --debug )
    fi

before_cache:
  - |
    # Delete volatile files:
    # https://docs.travis-ci.com/user/languages/java/#projects-using-gradle
    rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
    rm -fr $HOME/.gradle/caches/transforms-1/
    rm -fr $HOME/.gradle/caches/*/plugin-resolution/
    rm -fr $HOME/.gradle/caches/*/fileHashes/
